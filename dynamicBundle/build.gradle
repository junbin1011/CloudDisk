plugins {
    id 'com.android.library'
    id 'kotlin-android'
}

apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'com.alibaba.arouter'
apply plugin: 'maven'
apply plugin: 'kotlin-kapt'

apply plugin: 'com.cloud.disk.plugin'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    dataBinding {
        enabled = true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }
}

hilt {
    enableTransformForLocalTests = true
}

group = 'com.cloud.disk.bundle'
archivesBaseName = 'dynamic'
version = '1.0.1'

repositories.mavenCentral()

uploadArchives {
    repositories.mavenDeployer {
        repository(url: 'file:' + rootDir.getPath() + '/lib')
    }
}

dependencies {
    implementation 'com.cloud.disk:api:1.0.0'
    implementation 'com.cloud.disk:library:1.0.0'
    implementation 'com.cloud.disk:platform:1.0.0'

    project.Lib.kotlin()
    project.Lib.supportV4()
    project.Lib.appCompact()
    project.Lib.material()
    project.Lib.router()
    project.Lib.mvvm()
    project.Lib.ktx()
    project.Lib.coroutines()
    project.Lib.room()
    project.Lib.hilt()
    project.Lib.test()
}